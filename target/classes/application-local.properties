# ## Server Config start##
# spring.datasource.username=root
# spring.datasource.password=Pathdxmysql@123
# ## Server Config end##
# spring.jpa.show-sql=false
# spring.jpa.generate-ddl=false
# spring.jpa.hibernate.ddl-auto=update
# #spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.main.allow-bean-definition-overriding=true
# spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# ## Server Config start##
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.format_sql=true
# #spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect

# fac

# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# # App Properties
# jwt.Secret=pathdx
# #jwtSecret=pathfordexwebsiteneonrampart342019ba342186ef5e
# jwtExpiration=900000
# refreshExpiration=900000
# filePath=TestImage.jpg
# projectId=${PROJECT_ID}
# bucketName=${BUCKET_NAME}

# #Token secret
# secretKey=su][per#califrag%ilis@tiC+EP?pi*ali^doc$i{}ous

# #mail config
# mail.smtp.auth=true
# mail.smtp.starttls.enable=true
# mail.smtp.host=smtp.office365.com
# mail.smtp.port=587

# google.map.api.path=/maps/api/geocode/json
# google.map.api.host=maps.googleapis.com
# google.map.api.scheme=https
# #google.map.api.apiKey=${GOOGLE_MAP_API_KEY}
# profileImageObjectName=user_profile_image/
# qualityImageObjectName=upload_lab_image/

# #Mail Config

# spring.mail.username=info@pathforcetech.com
# spring.mail.password=i+bw4+KHA9
# google.map.api.apiKey=AIzaSyD5eyvNFllaqxX1K4pYKF8nmuUeUMD0Y_4


# # disable CloudSQL + all JDBC/JPA locally
# spring.cloud.gcp.sql.enabled=false
# spring.autoconfigure.exclude=\
# org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
# org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
# org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\
# org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration,\
# org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration


# turn off Cloud SQL + JDBC/JPA locally
spring.cloud.gcp.sql.enabled=false
spring.datasource.url=jdbc:h2:mem:pathforce;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# app port (change if 8080 busy)
server.port=8080

# Orthanc connection (adjust if different)
orthanc.url=http://127.0.0.1:8042
orthanc.user=orthanc
orthanc.pass=orthanc
orthanc.attachmentName=roiJson

# --- DO NOT START ANY DB/JPA IN LOCAL ---
spring.autoconfigure.exclude=\
org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration

# Safety: even if something slips through, tell Hibernate to do nothing
spring.jpa.hibernate.ddl-auto=none

# If you had H2 console/dev props in local, comment them out
# spring.h2.console.enabled=false
